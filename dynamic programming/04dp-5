//maximum sum of non adjacent element

//https://leetcode.com/problems/house-robber/
#include<iostream>
#include<vector>
using namespace std;
class Solution {
public:
int fn(int i,vector<int> & arr,vector<int> & dp){
    if(i==0) return arr[0];
    if(i<0) return 0;
    if(dp[i]!=-1) return dp[i];
    int pick=arr[i]+fn(i-2,arr,dp);
    int notpick=fn(i-1,arr,dp);
    return dp[i]= max(pick,notpick);
}
    int rob(vector<int>& arr) {
       int n=arr.size();
       if(n==1) return arr[0];
       //vector<int>dp(n,-1);
       // int ans=fn(n-1,arr,dp);
       // return ans;
       vector<int>dp(n);
       dp[0]=arr[0];
       
       dp[1]=max(arr[0],arr[1]);

       for(int i=2;i<n;i++){
        dp[i]=max(arr[i]+dp[i-2],dp[i-1]);
       }
       return dp[n-1];
        
    }
};